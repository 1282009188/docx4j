<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.plutext</groupId>
  <artifactId>docx4j</artifactId>
  <name>docx4j</name>
  <version>0.1-SNAPSHOT</version>
  <description>docx4j is a library which helps you to work with the Office Open XML file format, specifically WordprocessingML as used in docx documents.</description>
  <url>http://dev.plutext.org/</url>
  <prerequisites/>
  <inceptionYear>2007</inceptionYear>
  <developers>
    <developer>
      <id>jharrop</id>
      <name>Jason Harrop</name>
      <email>jason@plutext.org</email>
      <organization>Plutext</organization>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>+10</timezone>
    </developer>
  </developers>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Maven 2 Repository</name>
      <url>https://maven2-repository.dev.java.net/nonav/repository</url>
    </repository>
    <repository>
      <id>maven-repository.dev.java.net</id>
      <name>Java.net Maven 1 Repository (legacy)</name>
      <url>https://maven-repository.dev.java.net/nonav/repository</url>
      <layout>legacy</layout>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>2.8.1</version>
    </dependency>
    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.13</version>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <!-- required for fop fonts -->
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <!-- required for fop fonts -->
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.1</version>
    </dependency>
    <!-- required for transforming to xhtml 
		
		 But we use a patched copy as a workaround
		 for http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6396599

		 remove META-INF/services from the xalan jar to prevent xalan 
		 being picked up as the default provider for jaxp transform.

		 6396599 has been fixed in the on-going release JDK7. 
		 6396599 has also been committed to backport to 6u release 6u10 		
		
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <version>2.7.0</version>
    </dependency> 
		-->
  </dependencies>
</project>