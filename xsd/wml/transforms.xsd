<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:wp="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing" 
	xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main" 
	xmlns:pkg="http://schemas.microsoft.com/office/2006/xmlPackage" 
	attributeFormDefault="qualified" elementFormDefault="qualified" 
	targetNamespace="http://www.plutext.org/transforms" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
	xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc" 
	jaxb:version="2.1">
<!-- 	jaxb:extensionBindingPrefixes="xjc" -->
	

  <xsd:import namespace="http://schemas.openxmlformats.org/wordprocessingml/2006/main"
	  schemaLocation="wml.xsd" />
	
<!--    To generate the classes (from the same directory)	
			
			 sh ~/jaxb-ri-20071219/bin/xjc.sh -classpath ~/workspace/docx4j/m2/org/jvnet/jaxb2_commons/ppp/parent-pointer-plugin/1.0/parent-pointer-plugin-1.0.jar -Xparent-pointer transforms.xsd -d tmp/ -no-header -target 2.0

 -->	
	
	<!-- You need one schema document per namespace: 
		
	http://lists.xml.org/archives/xml-dev/200606/msg00155.html -->
	
	<xsd:annotation>
		<xsd:appinfo>
			<xsd:appinfo>
				<jaxb:globalBindings>
				</jaxb:globalBindings>
			</xsd:appinfo>
			<jaxb:schemaBindings>
				<jaxb:package name="org.plutext.transforms"/>
			</jaxb:schemaBindings>
		</xsd:appinfo>
	</xsd:annotation>
	
	<xsd:element name="transforms">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="t">
          <xsd:complexType>
            <xsd:choice>
              <xsd:element ref="w:style" />
              <xsd:element ref="w:sdt"  />
              
              <!--  You can do something like:
              
        	            <xsd:element minOccurs="0" ref="w:document" />
              
              		but a reference to a complexType
              
		                <xsd:element name="sdt"    type="w:CT_SdtBlock" />

					doesn't give you sdt in w: namespace (as you'd expect). 
					
					However:
					              
              			<xsd:element name="w:sdt"    type="w:CT_SdtBlock" />
              			
              		is not allowed.
              		
              		So, wml.xsd restructured to create elements sdt and style.
					              
               -->
            </xsd:choice>
            <xsd:attribute name="tstamp" type="xsd:unsignedInt" use="required" />
            <xsd:attribute name="snum"   type="xsd:unsignedInt" use="required" />
            <xsd:attribute name="op"     type="xsd:string" use="required" />
            <xsd:attribute name="idref"  type="xsd:unsignedInt" use="optional" />
            <xsd:attribute name="after"  type="xsd:unsignedInt" use="optional" />
            
            <!--  Type conversions:
            
            		xsd:unsignedByte becomes Java short (16 bit signed integer ie +/- 32767
            		xsd:unsignedInt  becomes Java long  (64 bit signed integer)
            		xsd:unsignedLong becomes Java BigInteger            
            
             -->
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
	
</xsd:schema>
